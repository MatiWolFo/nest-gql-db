# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  fullName: String!
  email: String!
  password: String!
  roles: [String!]!
  isActive: Boolean!
  updatedBy: User
  itemCount: Int!
  items(offset: Int = 0, limit: Int = 10, search: String): [Item!]!
  listCount: Int!
  lists(offset: Int = 0, limit: Int = 10, search: String): [List!]!
}

type List {
  id: ID!
  name: String!
  user: User!
  listItem(offset: Int = 0, limit: Int = 10, search: String): [ListItem!]!
  totalItems: Float!
}

type ListItem {
  id: ID!
  quantity: Float!
  completed: Boolean!
  list: List!
  item: Item!
}

type Item {
  id: ID!
  name: String!
  quantity: Float
  quantityUnits: String
  user: User!
  listItem: [ListItem!]!
}

type AuthResponse {
  token: String!
  user: User!
}

type Query {
  """get all items in DB"""
  findAllItems(offset: Int = 0, limit: Int = 10, search: String): [Item!]!

  """get items in DB by ID"""
  findItemById(id: ID!): Item!
  findAllUsers(roles: [ValidRoles!] = []): [User!]!
  findOneUserByID(id: ID!): User!

  """get all lists in DB"""
  findAllLists(offset: Int = 0, limit: Int = 10, search: String): [List!]!

  """get lists in DB by ID"""
  findListById(id: ID!): List!

  """get listItem in DB by ID"""
  findLisItemstById(id: ID!): ListItem!
  revalidateToken: AuthResponse!
}

"""Deja seleccionar valores dentro de ValidRoles"""
enum ValidRoles {
  admin
  user
  superUser
}

type Mutation {
  """create an item to DB"""
  createItem(createItemInput: CreateItemInput!): Item!

  """update an item in DB by ID"""
  updateItemById(updateItemInput: UpdateItemInput!): Item!

  """delete an item by ID"""
  deleteItemById(id: ID!): Item!
  blockUserByID(id: ID!): User!
  updateUserByID(updateUserInput: UpdateUserInput!): User!

  """create a list to DB"""
  createList(createListInput: CreateListInput!): List!

  """update a list in DB by ID"""
  updateListById(updateListInput: UpdateListInput!): List!

  """delete a list by ID"""
  deleteListById(id: ID!): List!
  createListItem(createListItemInput: CreateListItemInput!): ListItem!

  """Update listItem info in DB by ID"""
  updateListItemById(updateListItemInput: UpdateListItemInput!): ListItem!
  userSignUp(signUpInput: SignUpInput!): AuthResponse!
  userLogIn(loginInput: LoginInput!): AuthResponse!
  executeSeedtoDB: Boolean!
}

input CreateItemInput {
  name: String!
  quantity: Float
  quantityUnits: String
}

input UpdateItemInput {
  name: String
  quantity: Float
  quantityUnits: String
  id: ID!
}

input UpdateUserInput {
  email: String
  fullName: String
  password: String
  id: ID!
  roles: [ValidRoles!]
  isActive: Boolean
}

input CreateListInput {
  name: String!
}

input UpdateListInput {
  name: String
  id: ID!
}

input CreateListItemInput {
  quantity: Float = 0
  completed: Boolean = false
  listId: ID!
  itemId: ID!
}

input UpdateListItemInput {
  quantity: Float = 0
  completed: Boolean = false
  listId: ID
  itemId: ID
  id: ID!
}

input SignUpInput {
  email: String!
  fullName: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}